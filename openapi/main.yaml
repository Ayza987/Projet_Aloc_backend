openapi: "3.0.3"
info:
  title: "Allocation API"
  description: "Backend application for resources allocation system"
  version: "1.0.0"
servers:
  - url: "http://localhost:8080"
    description: "Local server"


paths:
  /auth/signup:
    post:
      tags:
        - "User"
      summary: "Create an account"
      description: "Create an endpoint for signing up the users"
      operationId: signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequestDTO'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponseDTO'
        '403':
          description: Forbidden access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenAccessDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestDTO'
  /users/{id}:
    patch:
      description: "Create an endpoint for updating a user"
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          description: "The id of the user to update"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequestDTO'
      responses:
        '200':
          description: "User updated successfully"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'





components:
  schemas:
    AuthenticationRequestDTO:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "user@entreprise.com"
        password:
          type: string
          format: password

    AuthenticationResponseDTO:
      type: object
      properties:
        token:
          type: string
        isAdmin:
          type: boolean
          example: true

    ErrorDTO:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
          example: "Invalid credentials"

    SignupRequestDTO:
      type: object
      required:
        - name
        - surname
        - email
      properties:
        name:
          type: string
          example: "name"
        surname:
          type: string
          example: "surname"
        email:
          type: string
          format: email
          example: "user@entreprise.com"

    SignupResponseDTO:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
          example: "User created successfully"

    ForbiddenAccessDTO:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
          example: "User has not access"
    BadRequestDTO:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
          example: "Invalid data"


    UpdateUserRequestDTO:
          type: object
          properties:
            email:
              type: string
            name:
              type: string
            surname:
              type: string







