plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.0.0'
	id 'io.freefair.lombok' version '8.4'

}

group = 'com.laosarl'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.20'
	implementation 'org.projectlombok:lombok:1.18.36'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mockito:mockito-core:5.0.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

openApiGenerate {
	generatorName = 'spring'
	inputSpec = "$projectDir/spec/main.yaml"
	outputDir = "$buildDir/generated"
	apiPackage = 'com.laosarl.allocation_ressources.api'
	modelPackage = 'com.laosarl.allocation_ressources.model'
	configOptions = [
			delegatePattern: "true",
			dateLibrary: "java8",
			interfaceOnly: "true",
			useSpringBoot3: "true",
			documentationProvider: "springdoc",
			annotationLibrary: "swagger2",
			useJakartaEe: "true"
	]
}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs += [
			'-XX:+EnableDynamicAgentLoading',
			'-Djdk.instrument.traceUsage=false'
	]
}
tasks.named('compileJava').configure{
	dependsOn('openApiGenerate')
}
sourceSets {
	main {
		java {
			srcDir "${buildDir}/generated/src/main/java"
		}
	}
}
